{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tania\\\\Downloads\\\\FLASHBURGERS-main (1)\\\\FLASHBURGERS-main\\\\src\\\\App.js\";\nimport './App.css';\nimport Swal from 'sweetalert2';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Menu from './componentes/menu';\nimport Carrito from './componentes/carrito';\nimport Logo from './componentes/logo';\nimport { Component, useEffect } from 'react';\nimport Tostada from './componentes/toast';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport axios from 'axios';\nimport Catalogo from './componentes/catalogo.js';\nimport { PHPBORRAR, PHPESTADO, PHPSENTENCIAS, PHPTODOSPEDIDOS, PHPVER } from './php/Datos.js';\nimport { PHPCATEGORIA } from './conf/Datos.js';\nimport { PHPEDIDOS } from './php/Datos.js';\nimport { PHPINGREDIENTES } from './php/Datos.js';\nimport { PHPINSERTARPRO } from './php/Datos.js';\nimport ListaPedido from './componentes/pedidosver.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    //aqui hago llamado para el php para crear el pedido pasandole nombre,telefono,precio y el carrito con los productos, despues en el the llamo a la funcion añadirproducto y verdatos pedido y me guardo el id insertadoi del pedido\n    this.crearpedio = (nombrecliente, telefonocliente, cantidadTotal, carrito) => {\n      axios.post(PHPEDIDOS, JSON.stringify({\n        nombrecliente: nombrecliente,\n        telefonocliente: telefonocliente,\n        cantidadTotal: cantidadTotal\n      })).then(res => {\n        let t = res.data;\n        this.setState({\n          id: t\n        });\n        this.setState({\n          id: t\n        }, () => {\n          carrito.map(v => {\n            this.añadirpro(v.id_producto, t.ult_id, v.cantidad);\n          });\n          this.verdatospedido(t.ult_id);\n          this.todospedidos();\n        });\n      });\n    };\n    this.estadopedido = id_pedido => {\n      axios.put(PHPESTADO, JSON.stringify({\n        id_pedido: id_pedido\n      })).then(response => {\n        // Actualiza directamente el estado de `todospedidos`\n        const nuevosPedidos = this.state.todospedidos.map(pedido => pedido.id_pedido === id_pedido ? {\n          ...pedido,\n          estado: response.data.id\n        } : pedido);\n        this.setState({\n          todospedidos: nuevosPedidos\n        }, () => {\n          // Llama a todospedidos después de que se haya actualizado el estado\n          this.todospedidos();\n        });\n      }).catch(error => {\n        console.error('Error al actualizar el estado del pedido:', error);\n      });\n    };\n    //aqui añado los productos al carrito y compruebo si ya estan añadidos antes o no y en caso de estar se le añadiria la cantidad al contador  y al precio , sino se añadira normal \n    this.añadirLista = (nombre, precio, cantidad, id_pro) => {\n      const produIndex = this.state.carrito.findIndex(item => item.nombre === nombre);\n      toast.success('Producto añadido con éxito');\n      if (produIndex !== -1) {\n        // Producto ya existe en el carrito\n        this.setState(prevState => {\n          const nuevaCantidad = prevState.carrito[produIndex].cantidad + cantidad;\n          const nuevoPrecio = precio * nuevaCantidad;\n          return {\n            carrito: prevState.carrito.map((item, index) => {\n              if (index === produIndex) {\n                return {\n                  ...item,\n                  precio: nuevoPrecio,\n                  cantidad: nuevaCantidad\n                };\n              }\n              return item;\n            }),\n            precioTotal: prevState.precioTotal + precio * cantidad,\n            cantidadTotal: prevState.cantidadTotal + cantidad\n          };\n        }, () => {\n          console.log('Carrito actualizado:', this.state.carrito); // Asegurando que se imprima el estado actualizado\n        });\n      } else {\n        // Producto no existe en el carrito, añadir nuevo\n        const precioProducto = precio * cantidad;\n        this.setState(prevState => ({\n          carrito: [...prevState.carrito, {\n            id_producto: id_pro,\n            nombre: nombre,\n            precio: precioProducto,\n            cantidad: cantidad\n          }],\n          precioTotal: prevState.precioTotal + precioProducto,\n          cantidadTotal: prevState.cantidadTotal + cantidad\n        }), () => {\n          console.log('Carrito actualizado:', this.state.carrito); // Asegurando que se imprima el estado actualizado\n        });\n      }\n    };\n    //aqui llamaremos a las funciones crearpedio y cambieremos los estados y vaciaremos todas las variables de estado para un nuevo pedido\n    this.realizarpedido = (n, t) => {\n      this.crearpedio(n, t, this.state.precioTotal, this.state.carrito);\n      this.setState({\n        logo: true,\n        carrito: [],\n        cantidadTotal: 0,\n        precioTotal: 0,\n        show: false,\n        lp: false\n      });\n    };\n    this.state = {\n      menuItem: \"\",\n      productos: [],\n      categoria: [],\n      logo: true,\n      pedido: true,\n      carrito: [],\n      precioTotal: 0,\n      ingredientes: [],\n      cantidadTotal: 0,\n      show: true,\n      telefono: '',\n      lp: false,\n      id: [],\n      swalWithBootstrapButtons: Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger\"\n        },\n        buttonsStyling: false\n      }),\n      datospedido: [],\n      datosfilt: [],\n      todospedidos: [],\n      estadopedido: []\n    };\n  }\n  componentDidMount() {\n    this.todospedidos();\n  }\n  //aqui con el id_pedido y el id_producto voy añadiendo a la tabla TANIA_pedidos_productos los ids correspondientes\n  añadirpro(id_producto, id_pedido, cantidad) {\n    axios.post(PHPINSERTARPRO, JSON.stringify({\n      id_producto: id_producto,\n      id_pedido: id_pedido,\n      cantidad: cantidad\n    })).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  //aqui con el id_pedido hago un delete de la tabla TANIA_pedidos y en la TANIA_pedidos_productos\n  cancelarpedido(id_pedido) {\n    axios.delete(`${PHPBORRAR}?id_pedido=${id_pedido}`).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  //aqui con el id_pedido me traigo el json con los datos del pedido realizado anteriormente\n  verdatospedido(id_pedido) {\n    axios.post(PHPVER, JSON.stringify({\n      id_pedido: id_pedido\n    })).then(res => {\n      let t = res.data;\n      console.log(t);\n      this.SweetAlert2(id_pedido, t);\n    });\n  }\n  todospedidos() {\n    axios.get(PHPTODOSPEDIDOS).then(response => {\n      let nuevosPedidos = response.data;\n      console.log(nuevosPedidos);\n      this.setState({\n        todospedidos: nuevosPedidos\n      });\n    }).catch(error => {\n      console.error('Error al obtener todos los pedidos:', error);\n    });\n  }\n\n  //aqui me traigo el json de todos los productos\n  productos() {\n    axios.get(PHPSENTENCIAS).then(response => {\n      this.setState({\n        productos: response.data\n      });\n    });\n  }\n\n  //aqui me traigo el json de los ingredientes de los productos\n  ingredientes() {\n    axios.get(PHPINGREDIENTES).then(response => {\n      this.setState({\n        ingredientes: response.data\n      });\n    });\n  }\n\n  //esto es una alerta con un pluggin que llama a la ventana cuando finaliza la compra y te da la opcion de cancelar el pedido o ver los detalles del pedido\n  SweetAlert2(id, datos) {\n    Swal.fire({\n      title: \"Pedido realizado con éxito!\",\n      text: \"La cocina empezará a preparar su pedido.\",\n      imageUrl: \"https://i.gifer.com/ZXFj.gif\",\n      imageWidth: 400,\n      imageHeight: 300,\n      imageAlt: \"Custom image\",\n      icon: \"success\",\n      showCancelButton: true,\n      confirmButtonText: \"Ver mi pedido\",\n      cancelButtonText: \"Cancelar pedido\",\n      reverseButtons: true\n    }).then(result => {\n      if (result.isConfirmed) {\n        let nombre = '';\n        let telefono = '';\n        let productos = '';\n        let precio = '';\n        let estado = '';\n        let idp = '';\n        console.log(datos.map(y => y));\n        datos.map(t => {\n          nombre = t.nombre;\n          telefono = t.telefono;\n          productos += `<li>${t.producto_nombre} : ${t.cantidad}</li>`;\n          precio = t.precio;\n          estado = t.estado;\n          idp = t.id_pedido;\n        });\n        Swal.fire({\n          title: \"Numero de pedido: \" + idp,\n          imageUrl: \"https://i.gifer.com/TwuB.gif\",\n          imageWidth: 400,\n          imageHeight: 300,\n          html: `<p>Estado del pedido <strong>${estado}</strong></p>\n                 <p>Nombre: ${nombre}</p>\n                 <p>Teléfono: ${telefono}</p>\n                 <p>Productos<ul> ${productos} </ul></p>\n                 <p>Precio: ${precio} €</p>`,\n          icon: \"info\"\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        console.log(id.ult_id);\n        this.cancelarpedido(id.ult_id); // Llama a la función para cancelar el pedido\n        Swal.fire({\n          title: \"Pedido cancelado\",\n          text: \"Tu pedido ha sido cancelado con éxito.\",\n          icon: \"success\"\n        });\n      }\n    });\n  }\n\n  //aqui guardo el numero del menu que usare para el switch\n  changeMenu(item) {\n    let l = item;\n    console.log(item);\n    this.setState({\n      menuItem: l,\n      logo: false,\n      lp: true\n    });\n  }\n\n  //aqui me traigo el json de las categorias\n  categorias() {\n    axios.get(PHPCATEGORIA).then(response => {\n      let l = response.data;\n      this.setState({\n        categoria: l\n      });\n    });\n  }\n  terminar(id) {\n    this.estadopedido(id);\n  }\n  //aqui borraremos el item de la lista de carrito\n  borrar(item) {\n    const cantidadBorrar = item.cantidad;\n    const precioBorrar = item.precio;\n    this.setState(prevState => ({\n      carrito: prevState.carrito.filter(v => v !== item),\n      precioTotal: prevState.precioTotal - precioBorrar,\n      cantidadTotal: prevState.cantidadTotal - cantidadBorrar\n    }));\n  }\n  render() {\n    let obj = /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }, this);\n    let bt = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    if (!this.state.logo) {\n      obj = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Catalogo, {\n          productos: () => this.productos(),\n          ingrediente: this.state.ingredientes,\n          ingredientes: () => this.ingredientes(),\n          id: this.state.menuItem,\n          producto: this.state.productos,\n          añadir: (nombre, precio, cantidad, id_pro) => this.añadirLista(nombre, precio, cantidad, id_pro)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App vh-100 bg-dark\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        categoria: () => this.categorias(),\n        menu: this.state.categoria,\n        menuelegir: item => this.changeMenu(item),\n        menuItem: this.state.menuItem,\n        generar: () => this.todospedidos()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logocentrar\",\n        className: \"vh-100 contenido\",\n        children: [obj, bt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tostada, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carrito, {\n        mostrar: this.state.carrito,\n        borrar: lista => this.borrar(lista),\n        total: this.state.precioTotal,\n        canT: this.state.cantidadTotal,\n        click: (n, t) => this.realizarpedido(n, t)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Swal","Menu","Carrito","Logo","Component","useEffect","Tostada","toast","Toaster","axios","Catalogo","PHPBORRAR","PHPESTADO","PHPSENTENCIAS","PHPTODOSPEDIDOS","PHPVER","PHPCATEGORIA","PHPEDIDOS","PHPINGREDIENTES","PHPINSERTARPRO","ListaPedido","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","props","crearpedio","nombrecliente","telefonocliente","cantidadTotal","carrito","post","JSON","stringify","then","res","t","data","setState","id","map","v","añadirpro","id_producto","ult_id","cantidad","verdatospedido","todospedidos","estadopedido","id_pedido","put","response","nuevosPedidos","state","pedido","estado","catch","error","console","añadirLista","nombre","precio","id_pro","produIndex","findIndex","item","success","prevState","nuevaCantidad","nuevoPrecio","index","precioTotal","log","precioProducto","realizarpedido","n","logo","show","lp","menuItem","productos","categoria","ingredientes","telefono","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","datospedido","datosfilt","componentDidMount","cancelarpedido","delete","SweetAlert2","get","datos","fire","title","text","imageUrl","imageWidth","imageHeight","imageAlt","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","idp","y","producto_nombre","html","dismiss","DismissReason","cancel","changeMenu","l","categorias","terminar","borrar","cantidadBorrar","precioBorrar","filter","render","obj","fileName","_jsxFileName","lineNumber","columnNumber","bt","children","ingrediente","producto","añadir","className","menu","menuelegir","generar","mostrar","lista","total","canT","click"],"sources":["C:/Users/tania/Downloads/FLASHBURGERS-main (1)/FLASHBURGERS-main/src/App.js"],"sourcesContent":["import './App.css';\nimport Swal from 'sweetalert2';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Menu from './componentes/menu';\nimport Carrito from './componentes/carrito';\nimport Logo from './componentes/logo';\nimport { Component, useEffect } from 'react';\nimport Tostada from './componentes/toast';\nimport toast, { Toaster } from \"react-hot-toast\";\nimport axios from 'axios';\nimport Catalogo from './componentes/catalogo.js';\nimport { PHPBORRAR, PHPESTADO, PHPSENTENCIAS, PHPTODOSPEDIDOS, PHPVER } from './php/Datos.js';\nimport { PHPCATEGORIA } from './conf/Datos.js';\nimport { PHPEDIDOS } from './php/Datos.js';\nimport { PHPINGREDIENTES } from './php/Datos.js';\nimport { PHPINSERTARPRO } from './php/Datos.js';\nimport ListaPedido from './componentes/pedidosver.js';\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      menuItem: \"\",\n      productos: [],\n      categoria: [],\n      logo: true,\n      pedido: true,\n      carrito: [],\n      precioTotal: 0,\n      ingredientes: [],\n      cantidadTotal: 0,\n      show: true,\n      telefono: '',\n      lp: false,\n      id: [],\n      swalWithBootstrapButtons: Swal.mixin({\n        customClass: {\n          confirmButton: \"btn btn-success\",\n          cancelButton: \"btn btn-danger\"\n        },\n        buttonsStyling: false\n      }),\n      datospedido: [],\n      datosfilt: [],\n      todospedidos: [],\n      estadopedido: [],\n\n    }\n  }\n  componentDidMount() {\n    this.todospedidos();\n  }\n  //aqui hago llamado para el php para crear el pedido pasandole nombre,telefono,precio y el carrito con los productos, despues en el the llamo a la funcion añadirproducto y verdatos pedido y me guardo el id insertadoi del pedido\n  crearpedio = (nombrecliente, telefonocliente, cantidadTotal, carrito) => {\n    axios.post(PHPEDIDOS, JSON.stringify({\n      nombrecliente: nombrecliente,\n      telefonocliente: telefonocliente,\n      cantidadTotal: cantidadTotal,\n    }))\n      .then(res => {\n        let t = res.data;\n        this.setState({ id: t })\n        this.setState({ id: t }, () => {\n          carrito.map(v => {\n            this.añadirpro(v.id_producto, t.ult_id, v.cantidad);\n          });\n          this.verdatospedido(t.ult_id)\n          this.todospedidos()\n\n        });\n\n      })\n\n  }\n\n\n  //aqui con el id_pedido y el id_producto voy añadiendo a la tabla TANIA_pedidos_productos los ids correspondientes\n  añadirpro(id_producto, id_pedido, cantidad) {\n    axios.post(PHPINSERTARPRO, JSON.stringify({\n      id_producto: id_producto,\n      id_pedido: id_pedido,\n      cantidad: cantidad,\n    }))\n      .then(res => {\n        console.log(res.data);\n      })\n  }\n\n  //aqui con el id_pedido hago un delete de la tabla TANIA_pedidos y en la TANIA_pedidos_productos\n  cancelarpedido(id_pedido) {\n    axios.delete(`${PHPBORRAR}?id_pedido=${id_pedido}`)\n      .then(res => {\n        console.log(res.data);\n      })\n      ;\n  }\n\n  //aqui con el id_pedido me traigo el json con los datos del pedido realizado anteriormente\n  verdatospedido(id_pedido) {\n    axios.post(PHPVER, JSON.stringify({\n\n      id_pedido: id_pedido,\n\n    }))\n      .then(res => {\n        let t = res.data;\n        console.log(t)\n        this.SweetAlert2(id_pedido, t)\n\n      })\n\n  }\n\n  estadopedido = (id_pedido) => {\n    axios.put(PHPESTADO, JSON.stringify({ id_pedido: id_pedido }))\n      .then(response => {\n        // Actualiza directamente el estado de `todospedidos`\n        const nuevosPedidos = this.state.todospedidos.map(pedido =>\n          pedido.id_pedido === id_pedido ? { ...pedido, estado: response.data.id } : pedido\n        );\n        this.setState({ todospedidos: nuevosPedidos }, () => {\n          // Llama a todospedidos después de que se haya actualizado el estado\n          this.todospedidos();\n        });\n      })\n      .catch(error => {\n        console.error('Error al actualizar el estado del pedido:', error);\n      });\n  }\n\n  todospedidos() {\n    axios.get(PHPTODOSPEDIDOS)\n      .then(response => {\n        let nuevosPedidos = response.data;\n        console.log(nuevosPedidos);\n\n        this.setState({ todospedidos: nuevosPedidos });\n      })\n      .catch(error => {\n        console.error('Error al obtener todos los pedidos:', error);\n      });\n  }\n\n\n\n\n\n\n  //aqui me traigo el json de todos los productos\n  productos() {\n    axios.get(PHPSENTENCIAS)\n      .then(response => {\n        this.setState({ productos: response.data });\n\n      })\n  }\n\n  //aqui me traigo el json de los ingredientes de los productos\n  ingredientes() {\n    axios.get(PHPINGREDIENTES)\n      .then(response => {\n        this.setState({ ingredientes: response.data });\n\n      })\n  }\n\n  //esto es una alerta con un pluggin que llama a la ventana cuando finaliza la compra y te da la opcion de cancelar el pedido o ver los detalles del pedido\n  SweetAlert2(id, datos) {\n\n    Swal.fire({\n      title: \"Pedido realizado con éxito!\",\n      text: \"La cocina empezará a preparar su pedido.\",\n      imageUrl: \"https://i.gifer.com/ZXFj.gif\",\n      imageWidth: 400,\n      imageHeight: 300,\n      imageAlt: \"Custom image\",\n      icon: \"success\",\n      showCancelButton: true,\n      confirmButtonText: \"Ver mi pedido\",\n      cancelButtonText: \"Cancelar pedido\",\n      reverseButtons: true\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let nombre = '';\n        let telefono = '';\n        let productos = '';\n        let precio = '';\n        let estado = '';\n        let idp = '';\n        console.log(datos.map(y => y))\n        datos.map(t => {\n          nombre = t.nombre;\n          telefono = t.telefono;\n          productos += `<li>${t.producto_nombre} : ${t.cantidad}</li>`;\n          precio = t.precio;\n          estado = t.estado;\n          idp = t.id_pedido;\n        });\n\n        Swal.fire({\n          title: \"Numero de pedido: \" + idp,\n          imageUrl: \"https://i.gifer.com/TwuB.gif\",\n          imageWidth: 400,\n          imageHeight: 300,\n          html: `<p>Estado del pedido <strong>${estado}</strong></p>\n                 <p>Nombre: ${nombre}</p>\n                 <p>Teléfono: ${telefono}</p>\n                 <p>Productos<ul> ${productos} </ul></p>\n                 <p>Precio: ${precio} €</p>`,\n          icon: \"info\"\n        });\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        console.log(id.ult_id);\n        this.cancelarpedido(id.ult_id); // Llama a la función para cancelar el pedido\n        Swal.fire({\n          title: \"Pedido cancelado\",\n          text: \"Tu pedido ha sido cancelado con éxito.\",\n          icon: \"success\"\n        });\n      }\n    });\n  }\n\n\n  //aqui guardo el numero del menu que usare para el switch\n  changeMenu(item) {\n    let l = item\n    console.log(item)\n    this.setState({ menuItem: l, logo: false, lp: true })\n  }\n\n  //aqui me traigo el json de las categorias\n  categorias() {\n    axios.get(PHPCATEGORIA)\n      .then(response => {\n        let l = response.data\n        this.setState({ categoria: l });\n\n      })\n\n  }\n  terminar(id) {\n    this.estadopedido(id)\n\n  }\n\n  //aqui añado los productos al carrito y compruebo si ya estan añadidos antes o no y en caso de estar se le añadiria la cantidad al contador  y al precio , sino se añadira normal \n  añadirLista = (nombre, precio, cantidad, id_pro) => {\n    const produIndex = this.state.carrito.findIndex(item => item.nombre === nombre);\n    toast.success('Producto añadido con éxito');\n\n    if (produIndex !== -1) {\n      // Producto ya existe en el carrito\n      this.setState(prevState => {\n        const nuevaCantidad = prevState.carrito[produIndex].cantidad + cantidad;\n        const nuevoPrecio = precio * nuevaCantidad;\n\n        return {\n          carrito: prevState.carrito.map((item, index) => {\n            if (index === produIndex) {\n              return { ...item, precio: nuevoPrecio, cantidad: nuevaCantidad };\n            }\n            return item;\n          }),\n          precioTotal: prevState.precioTotal + (precio * cantidad),\n          cantidadTotal: prevState.cantidadTotal + cantidad\n        };\n      }, () => {\n        console.log('Carrito actualizado:', this.state.carrito); // Asegurando que se imprima el estado actualizado\n      });\n    } else {\n      // Producto no existe en el carrito, añadir nuevo\n      const precioProducto = precio * cantidad;\n      this.setState(prevState => ({\n        carrito: [...prevState.carrito, { id_producto: id_pro, nombre: nombre, precio: precioProducto, cantidad: cantidad }],\n        precioTotal: prevState.precioTotal + precioProducto,\n        cantidadTotal: prevState.cantidadTotal + cantidad\n      }), () => {\n        console.log('Carrito actualizado:', this.state.carrito); // Asegurando que se imprima el estado actualizado\n      });\n    }\n  }\n\n\n  //aqui borraremos el item de la lista de carrito\n  borrar(item) {\n    const cantidadBorrar = item.cantidad;\n    const precioBorrar = item.precio;\n\n    this.setState(prevState => ({\n      carrito: prevState.carrito.filter(v => v !== item),\n      precioTotal: prevState.precioTotal - precioBorrar,\n      cantidadTotal: prevState.cantidadTotal - cantidadBorrar\n    }));\n  }\n\n  //aqui llamaremos a las funciones crearpedio y cambieremos los estados y vaciaremos todas las variables de estado para un nuevo pedido\n  realizarpedido = (n, t) => {\n    this.crearpedio(n, t, this.state.precioTotal, this.state.carrito);\n    this.setState({ logo: true, carrito: [], cantidadTotal: 0, precioTotal: 0, show: false, lp: false });\n  }\n\n\n\n  render() {\n    let obj = <Logo />;\n    let bt = <></>;\n    if (!this.state.logo) {\n      obj = <><Catalogo\n        productos={() => this.productos()}\n        ingrediente={this.state.ingredientes}\n        ingredientes={() => this.ingredientes()}\n        id={this.state.menuItem}\n        producto={this.state.productos}\n        añadir={(nombre, precio, cantidad, id_pro) => this.añadirLista(nombre, precio, cantidad, id_pro)}\n\n      /></>;\n    }\n\n    return (\n      <div className='App vh-100 bg-dark' >\n        <Menu\n          categoria={() => this.categorias()}\n          menu={this.state.categoria}\n          menuelegir={(item) => this.changeMenu(item)}\n          menuItem={this.state.menuItem}\n          generar={() => this.todospedidos()}\n        />\n        <div id='logocentrar' className='vh-100 contenido'>\n          {obj}\n          {bt}\n        </div>\n        <Tostada />\n        <Carrito\n          mostrar={this.state.carrito}\n          borrar={(lista) => this.borrar(lista)}\n          total={this.state.precioTotal}\n          canT={this.state.cantidadTotal}\n          click={(n, t) => this.realizarpedido(n, t)}\n        />\n      </div>\n\n    );\n  }\n\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}